morph:
  rpc_endpoint:
{% for endpoint in neofs_storage__morph_rpc %}
    - {{ endpoint }}
{% endfor %}

  notification_endpoint:
{% for endpoint in neofs_storage__morph_notification %}
    - {{ endpoint }}
{% endfor %}
  dial_timeout: 20s

node:
  key: {{ neofs_storage__key_path }}
  address: {{ neofs_storage__announce_address }}
{% for attr in neofs_storage__attributes %}
  attribute_{{ loop.index - 1 }}: {{ attr }}:{{ neofs_storage__attributes[attr] }}
{% endfor %}

grpc:
  endpoint: {{ neofs_storage__grpc_address }}:{{ neofs_storage__grpc_port }}

contracts:
{% for contract in neofs_storage__contracts %}
  {{ contract }}: {{ neofs_storage__contracts[contract] }}
{% endfor %}

logger:
  level: debug

metrics:
  address: {{ neofs_storage__prometheus_address }}:{{ neofs_storage__prometheus_port }}

pprof:
  address: {{ neofs_storage__pprof_address }}:{{ neofs_storage__pprof_port }}

storage:
  shard_num: {{ neofs_storage__shards|length }}
  shard:
{% for shard in neofs_storage__shards %}
    {{ loop.index - 1 }}:
      use_write_cache: {{ shard['write_cache']['enabled'] }}
{% if shard['write_cache']['enabled'] %}
      writecache:
        path: {{ shard['write_cache']['path'] }}
        mem_size: {{ shard['write_cache']['mem_size'] }}
        db_size: {{ shard['write_cache']['db_size'] }}
        small_size: {{ shard['write_cache']['small_size'] }}
        max_size: {{ shard['write_cache']['max_size'] }}
        workers_count: {{ shard['write_cache']['workers_count'] }}
{% endif %}
      metabase:
        path: {{ shard['metabase']['path'] }}
        perm: {{ shard['metabase']['perm'] }}
      blobstor:
        path: {{ shard['blobstor']['path'] }}
        perm: {{ shard['blobstor']['perm'] }}
        blobovnicza:
          opened_cache_size: {{ shard['blobovnicza']['opened_cache_size'] }}
          shallow_depth: {{ shard['blobovnicza']['shallow_depth'] }}
          shallow_width: {{ shard['blobovnicza']['shallow_width'] }}
      gc:
        remover_batch_size: {{ shard['gc']['remover_batch_size'] }}
        remover_sleep_interval: {{ shard['gc']['remover_sleep_interval'] }}
{% endfor %}

object:
  put:
    pool_size: {{ neofs_storage__put_pool }}
  get:
    pool_size: {{ neofs_storage__get_pool }}
  head:
    pool_size: {{ neofs_storage__head_pool }}
  search:
    pool_size: {{ neofs_storage__search_pool }}
  range:
    pool_size: {{ neofs_storage__put_pool }}
  rangehash:
    pool_size: {{ neofs_storage__put_pool }}
